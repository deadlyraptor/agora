# Generated by Django 4.0.6 on 2022-08-11 15:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import quantityfield.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        ('stores', '0001_define_store_model'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(
                    default=django.utils.timezone.now,
                    editable=False,
                    verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(
                    default=django.utils.timezone.now,
                    editable=False,
                    verbose_name='modified')),
                ('name', models.CharField(max_length=50)),
                ('price', models.DecimalField(
                    decimal_places=2,
                    default=0.0,
                    max_digits=5,
                    validators=[django.core.validators.MinValueValidator(0)])),
                ('promo_price', models.DecimalField(
                    blank=True,
                    decimal_places=2,
                    default=0.0,
                    max_digits=5,
                    validators=[django.core.validators.MinValueValidator(0)])),
                ('notes', models.TextField(blank=True)),
                ('store', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='products',
                    to='stores.store')),
                ('tags', taggit.managers.TaggableManager(
                    help_text='A comma-separated list of tags.',
                    through='taggit.TaggedItem',
                    to='taggit.Tag',
                    verbose_name='Tags')),
                ('weight', quantityfield.fields.QuantityField(
                    base_units='ounce',
                    default=1,
                    unit_choices=['ounce'])),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
